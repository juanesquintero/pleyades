version: "3.8"
name: pleyades-dev
services:
  web:
    container_name: pleyades-web_dev
    build:
      context: ./web
      dockerfile: ./Dockerfile
    image: pleyades-web:1.0.0
    volumes:
      - ./ies.json:/app/ies.json
      - ./web:/app
    networks:
      - dev-net
    env_file:
      - ./web/.env
    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=__init__:app
      - TEMPLATES_AUTO_RELOAD=1
    ports:
      - 5000:80
    command: flask run --host 0.0.0.0 --port 80
    depends_on:
      - api

  api:
    container_name: pleyades-api_dev
    build:
      context: ./api
      dockerfile: ./Dockerfile
    image: pleyades-apiv:1.0.0
    volumes:
      - ./api:/app
    env_file:
      - ./api/.env
    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=__init__:app
    ports:
      - 3000:80
    command: flask run --host 0.0.0.0 --port 80
    depends_on:
      - db

  db:
    container_name: pleyades-db_dev
    image: mysql:8.0.3
    cap_add:
      - SYS_NICE
    restart: always
    env_file:
      - ./api/.env
    environment:
      - MYSQL_ROOT_PASSWORD=pl3y4d3s*DB-.
    ports:
      - 3306:3306
    volumes:
      - ./api/db/pleyades/mysql:/var/lib/mysql
      - ./api/db/pleyades/sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    container_name: pleyades-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
networks:
  dev-net:
    driver: bridge
